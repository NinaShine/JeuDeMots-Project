import requests
import urllib3
import json

# D√©sactiver les warnings SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

API_BASE = "https://jdm-api.demo.lirmm.fr/v0"

# Dictionnaire des types de relations
relation = {
    "r_isa": 6  # Relation "est un" (hyperonyme)
}

def getJson(node1, node2, rel):
    """ Effectue une requ√™te pour r√©cup√©rer la relation entre deux mots """
    urlR = f"{API_BASE}/relations/from/{node1}/to/{node2}?types_ids={rel}"
    
    try:
        r = requests.get(urlR, verify=False)
        r.raise_for_status()  # V√©rifie si la requ√™te a r√©ussi
        return r.json()
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erreur lors de la requ√™te : {e}")
        return None

def save_to_file(data, filename):
    """ Sauvegarde les r√©sultats dans un fichier JSON """
    try:
        with open(filename, "w", encoding="utf-8") as f:
            json.dump(data, f, indent=4, ensure_ascii=False)
        print(f"üìÇ R√©sultat enregistr√© dans {filename}")
    except IOError as e:
        print(f"‚ùå Erreur d'√©criture du fichier : {e}")

def main():
    """ Fonction principale """
    print("Entrez votre requ√™te (format: mot1 relation mot2)")
    requete = input().strip()  # Supprime les espaces inutiles
    array = requete.split()

    if len(array) != 3:
        print("‚ùå Format incorrect. Utilisez : mot1 relation mot2")
        return 0

    node1, rel, node2 = array[0], array[1], array[2]

    # V√©rifie si la relation est connue
    if rel in relation:
        rel_id = relation[rel]
    else:
        print(f"‚ùå Relation inconnue : {rel}. Utilisez : {list(relation.keys())}")
        return 0

    # R√©cup√©ration des donn√©es JSON
    res = getJson(node1, node2, rel_id)

    if res and "relations" in res:
        if res["relations"]:
            poids = res["relations"][0].get("w", "N/A")
            print(f"‚úÖ '{node1}' est reli√© √† '{node2}' via '{rel}' (ID {rel_id}) avec un poids de {poids}.")
            
            # Enregistrer dans un fichier JSON
            filename = f"result_{node1}_{node2}.json"
            save_to_file(res, filename)

        else:
            print(f"‚ùå '{node1}' n'est PAS reli√© √† '{node2}' via '{rel}'.")
    else:
        print("‚ùå Aucune donn√©e trouv√©e ou erreur API.")

if __name__ == "__main__":
    main()
